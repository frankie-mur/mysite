<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Frankie Murillo</title>
    <link>http://localhost:1313/posts/</link>
    <description>Recent content in Posts on Frankie Murillo</description>
    <generator>Hugo -- 0.129.0</generator>
    <language>en</language>
    <lastBuildDate>Tue, 06 Aug 2024 22:48:54 -0700</lastBuildDate>
    <atom:link href="http://localhost:1313/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Go: some context about context</title>
      <link>http://localhost:1313/posts/go_context/</link>
      <pubDate>Tue, 06 Aug 2024 22:48:54 -0700</pubDate>
      <guid>http://localhost:1313/posts/go_context/</guid>
      <description>In its simpliest form, context is an interface from the Go docs
Package context defines the Context type, which carries deadlines, cancellation signals, and other request-scoped values across API boundaries and between processes. This may seem confusing but in essense context serves two purposes within a Go application Timeouts Storing values In general to craete a context you will call the context.Background() function. when you are unsure of what context to use you will use context.</description>
    </item>
    <item>
      <title>Oauth2</title>
      <link>http://localhost:1313/posts/oauth_2/</link>
      <pubDate>Wed, 31 Jul 2024 20:25:47 -0700</pubDate>
      <guid>http://localhost:1313/posts/oauth_2/</guid>
      <description>Oauth 2.0 TLDR; Oauth2 is an authorization protocol used to grant access to a resource (like a service or API) without sharing credentials. For example a spotify TUI client, would use Oauth2 to request access to the spotify API, then use that token to access the spotify API on your behalf, without having to share your credentials. This will also be limited to the scopes that you have allowed the client to access.</description>
    </item>
    <item>
      <title>Go with the Flow: Event Streaming with Go and Kafka</title>
      <link>http://localhost:1313/posts/go_kafka_article/</link>
      <pubDate>Sat, 27 Jul 2024 11:39:57 -0700</pubDate>
      <guid>http://localhost:1313/posts/go_kafka_article/</guid>
      <description>What is Kafka? Kafka is an event streaming platform used to collect and process data streams at scale, it was Initially developed at LinkedIn in 2011. It is now open-sourced and part of the Apache Software Foundation. It is a JVM application written in Java and Scala.
Notable Companies Using Kafka:
LinkedIn: Kafka originated at LinkedIn. They use it for tracking operational metrics, monitoring, and event sourcing.
Netflix: They use Kafka for real-time monitoring and event processing.</description>
    </item>
    <item>
      <title>Book Recomendations</title>
      <link>http://localhost:1313/posts/books/</link>
      <pubDate>Wed, 24 Jul 2024 23:03:49 -0700</pubDate>
      <guid>http://localhost:1313/posts/books/</guid>
      <description>Currently Reading&amp;hellip; Title Link Writing a Compiler in Go Link Acing the System Design Interview Link Have Read Title Thoughts Rating (out of 5) Link Writing An Intreptor In Go Really good book, and introduction to Go aswell as Programing languages, love how its written with a TDD approach 5/5 Link The Missing Read Me Awesome introduction to software engineering profession. Especialy enjoyed the chapers on SEMVER and comunicating with you manager 5/5 Link The Phoenix Project Classic.</description>
    </item>
    <item>
      <title>Gophercon 2024 Note Dump</title>
      <link>http://localhost:1313/posts/gophercon/</link>
      <pubDate>Tue, 23 Jul 2024 19:27:05 -0700</pubDate>
      <guid>http://localhost:1313/posts/gophercon/</guid>
      <description>GopherCon 2024 Notes Talks Day 1 Charm CLi (Habbit Tracker) - Donia Chaiehloudj Charm is a teminal UI written in go uses ELM archetecure - Model, View, Update grpC backend? (To store habbits etc) check out book Learning Go with pocket sized projects TLDR;Pretty cool, have used before not very succesfully, if I work with the Architecture of the project, I think it will be a lot easier to work with.</description>
    </item>
    <item>
      <title>My First Post</title>
      <link>http://localhost:1313/posts/my-first-post/</link>
      <pubDate>Mon, 22 Jul 2024 15:32:13 -0700</pubDate>
      <guid>http://localhost:1313/posts/my-first-post/</guid>
      <description>This is my first Hugo site it seems pretty cool&amp;hellip;. I have sest up PaperMod theme and menu bar along with tags and a fuzzy search. I hear Hugo is written in Go, Im interested in learning more about it (possibly Contribute to it?) anyways looking forward to making more posts. Kaizen!</description>
    </item>
  </channel>
</rss>
